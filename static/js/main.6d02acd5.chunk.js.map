{"version":3,"sources":["components/InventoryList.tsx","components/AddInventoryForm.tsx","App.tsx","index.tsx"],"names":["columns","title","dataIndex","key","render","date","toLocaleDateString","InventoryList","_ref","todos","react_default","a","createElement","table","dataSource","layout","labelCol","span","wrapperCol","tailLayout","offset","AddInventoryForm","addTodo","_useState","useState","Date","_useState2","Object","slicedToArray","startDate","setStartDate","_useState3","_useState4","text","setText","_useState5","_useState6","id","setId","_useState7","_useState8","comment","setComment","_Form$useForm","Form","useForm","form","es_form","assign","name","onFinish","values","expiry","toDate","resetFields","Item","label","rules","required","input","value","onChange","e","target","date_picker","moment","dateString","TextArea_default","rows","es_button","type","htmlType","inventoryItems","App","items","setTodos","interval","subscribe","val","today","forEach","item","notification","message","description","className","divider","AddInventoryForm_AddInventoryForm","newItem","concat","toConsumableArray","InventoryList_InventoryList","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6d02acd5.chunk.js","sourcesContent":["import { Table } from 'antd';\nimport React from 'react';\n\ninterface Props {\n  todos: Item[];\n}\n\nconst columns = [\n  {\n    title: '编号',\n    dataIndex: 'id',\n    key: 'id'\n  },\n  {\n    title: '名称',\n    dataIndex: 'text',\n    key: 'text'\n  },\n  {\n    title: '过期',\n    dataIndex: 'expiry',\n    key: 'expiry',\n    render: ((date:Date) => {\n      return date.toLocaleDateString();\n    })\n  },\n  {\n    title: '备注',\n    dataIndex: 'comment',\n    key: 'comment',\n  }\n];\n\nexport const InventoryList: React.FC<Props> = ({ todos }) => {\n  return (\n    <Table columns={columns} dataSource={todos} />\n  );\n};","import React, { useState } from 'react';\nimport {Button, DatePicker, Form, Input} from \"antd\";\nimport moment from 'moment';\nimport TextArea from 'antd/lib/input/TextArea';\n\ninterface Props {\n  addTodo: AddTodo;\n}\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 8 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nexport const AddInventoryForm: React.FC<Props> = ({addTodo}) => {\n  const [startDate, setStartDate] = useState<Date>(new Date());\n  const [text, setText] = useState('');\n  const [id, setId] = useState('');\n  const [comment, setComment] = useState('');\n  const [form] = Form.useForm();\n  const onFinish = (values: any) => {\n    addTodo(values.id, values.text, values.expiry.toDate(), values.comment);\n    //addTodo(id, text, startDate, comment);\n    form.resetFields();\n  };\n  return (\n    <Form \n      {...layout}\n      form={form}\n      name=\"entry-form\"\n      onFinish={onFinish}\n      >\n        <Form.Item name=\"id\" label=\"编号\" rules={[{required: true}]}>\n          <Input value={id} onChange={(e)=>{\n            setId(e.target.value)\n          }} />\n        </Form.Item>\n        <Form.Item name=\"text\" label=\"产品\" rules={[{required: true}]}>\n          <Input value={text} onChange={(e)=>{\n            setText(e.target.value)\n          }} />\n        </Form.Item>\n        <Form.Item name=\"expiry\" label=\"过期日期\" rules={[{required: true}]}>\n          <DatePicker \n            value={moment(startDate)}\n            onChange={(date, dateString)=>{\n              setStartDate(new Date(dateString));\n            }}\n          />\n        </Form.Item>\n        <Form.Item name=\"comment\" label=\"备注\">\n          <TextArea rows={4} value={comment} onChange={(e)=>{\n            setComment(e.target.value)\n          }} />\n        </Form.Item>\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            提交\n          </Button>\n        </Form.Item>\n    </Form>\n  );\n};","import React, { useState } from 'react';\nimport { InventoryList } from './components/InventoryList';\nimport { AddInventoryForm } from './components/AddInventoryForm';\nimport { Divider, notification } from 'antd';\nimport { interval } from 'rxjs';\nimport './App.css'\n\nconst inventoryItems: Item[] = [\n  {\n    id: '23412834234',\n    text: '镇江香醋',\n    expiry: new Date(\"2022-03-23\"),\n    comment: ''\n  },\n  {\n    id: '82739471239',\n    text: '德州扒鸡',\n    expiry: new Date(\"2021-12-13\"),\n    comment: ''\n  },\n];\n\nfunction App() {\n  const [items, setTodos] = useState(inventoryItems);\n\n  const addTodo: AddTodo = (id: string, text: string, expiry: Date, comment: string) => {\n    const newItem = { id, text, expiry, comment };\n    setTodos([...items, newItem]);\n  };\n\n  interval(10*1000)\n    .subscribe((val) => {\n      var today = new Date();\n      items.forEach(item => {\n        if(item.expiry<=today){\n          notification['warning']({\n            message: '过期提醒',\n            description:\n              '商品：'+item.text+' 编号：'+item.id+'已过期',\n          });\n        }\n      });\n    });\n\n  return (\n    <div className=\"App\">\n      <Divider>添加</Divider>\n      <AddInventoryForm addTodo={addTodo}/>\n      <Divider>库存</Divider>\n      <InventoryList todos={items} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}